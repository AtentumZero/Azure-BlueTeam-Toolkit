// Detect mass file downloads from an AWS storage resources
// List of AWS storage resources
let StorageResources = dynamic([
    "athena.amazonaws.com",
    "rds.amazonaws.com",
    "memorydb.amazonaws.com",
    "dynamodb.amazonaws.com",
    "elasticache.amazonaws.com",
    "elasticfilesystem.amazonaws.com",
    "glacier.amazonaws.com",
    "s3.amazonaws.com"
]);
// List of storage read events
let Events = dynamic([
    // Athena
    "BatchGetNamedQuery",
    "BatchGetPreparedStatement",
    "BatchGetQueryExecution",
    "ExportNotebook",
    "GetCalculationExecution",
    "GetCalculationExecutionCode",
    "GetCalculationExecutionStatus",
    "GetCapacityAssignmentConfiguration",
    "GetCapacityReservation",
    "GetDatabase",
    "GetDataCatalog",
    "GetNamedQuery",
    "GetNotebookMetadata",
    "GetPreparedStatement",
    "GetQueryExecution",
    "GetQueryResults",
    "GetQueryRuntimeStatistics",
    "GetSession",
    "GetSessionStatus",
    "GetTableMetadata",
    "GetWorkGroup",
    "ListApplicationDPUSizes",
    "ListCalculationExecutions",
    "ListCapacityReservations",
    "ListDatabases",
    "ListDataCatalogs",
    "ListEngineVersions",
    "ListExecutors",
    "ListNamedQueries",
    "ListNotebookMetadata",
    "ListNotebookSessions",
    "ListPreparedStatements",
    "ListQueryExecutions",
    "ListSessions",
    "ListTableMetadata",
    "ListTagsForResource",
    "ListWorkGroups",
    // RDS
    "ListTagsForResource",
    // MemoryDB
    "DescribeACLs",
    "DescribeClusters",
    "DescribeEngineVersions",
    "DescribeEvents",
    "DescribeParameterGroups",
    "DescribeParameters",
    "DescribeReservedNodes",
    "DescribeReservedNodesOfferings",
    "DescribeServiceUpdates",
    "DescribeSnapshots",
    "DescribeSubnetGroups",
    "DescribeUsers",
    "ListAllowedNodeTypeUpdates",
    "ListTags",
    // DynamoDB
    "BatchExecuteStatement",
    "BatchGetItem",
    "BatchWriteItem",
    "DescribeBackup",
    "DescribeContinuousBackups",
    "DescribeContributorInsights",
    "DescribeEndpoints",
    "DescribeExport",
    "DescribeGlobalTable",
    "DescribeGlobalTableSettings",
    "DescribeImport",
    "DescribeKinesisStreamingDestination",
    "DescribeLimits",
    "DescribeTable",
    "DescribeTableReplicaAutoScaling",
    "DescribeTimeToLive",
    "ExecuteStatement",
    "ExecuteTransaction",
    "GetItem",
    "ListBackups",
    "ListContributorInsights",
    "ListExports",
    "ListGlobalTables",
    "ListImports",
    "ListTables",
    "ListTagsOfResource",
    "Query",
    "Scan",
    "TransactGetItems",
    "TransactWriteItems",
    // Elasticache
    "DescribeCacheClusters",
    "DescribeCacheEngineVersions",
    "DescribeCacheParameterGroups",
    "DescribeCacheParameters",
    "DescribeCacheSecurityGroups",
    "DescribeCacheSubnetGroups",
    "DescribeEngineDefaultParameters",
    "DescribeEvents",
    "DescribeGlobalReplicationGroups",
    "DescribeReplicationGroups",
    "DescribeReservedCacheNodes",
    "DescribeReservedCacheNodesOfferings",
    "DescribeServiceUpdates",
    "DescribeSnapshots",
    "DescribeUpdateActions",
    "DescribeUserGroups",
    "DescribeUsers",
    "ListAllowedNodeTypeModifications",
    "ListTagsForResource",
    // Elastic File System
    "DescribeAccessPoints",
    "DescribeAccountPreferences",
    "DescribeBackupPolicy",
    "DescribeFileSystemPolicy",
    "DescribeFileSystems",
    "DescribeLifecycleConfiguration",
    "DescribeMountTargets",
    "DescribeMountTargetSecurityGroups",
    "DescribeReplicationConfigurations",
    "DescribeTags",
    "ListTagsForResource",
    // Glacier
    "DescribeVault",
    "GetVaultAccessPolicy",
    "GetVaultLock",
    "GetVaultNotifications",
    "ListTagsForVaults",
    "ListVaults",
    "ListParts",
    "ListMultipartUploads",
    "DescribeJob",
    "GetJobOutput",
    "ListJobs",
    "GetDataRetrievalPolicy",
    "ListProvisionedCapacity",
    // S3
    "GetBucketAccelerateConfiguration",
    "GetBucketAcl",
    "GetBucketAnalyticsConfiguration",
    "GetBucketCors",
    "GetBucketEncryption",
    "GetBucketIntelligentTieringConfiguration",
    "GetBucketInventoryConfiguration",
    "GetBucketLifecycle",
    "GetBucketLifecycleConfiguration",
    "GetBucketLocation",
    "GetBucketLogging",
    "GetBucketMetricsConfiguration",
    "GetBucketNotification",
    "GetBucketNotificationConfiguration",
    "GetBucketOwnershipControls",
    "GetBucketPolicy",
    "GetBucketPolicyStatus",
    "GetBucketReplication",
    "GetBucketRequestPayment",
    "GetBucketTagging",
    "GetBucketVersioning",
    "GetBucketWebsite",
    "GetObject",
    "GetObjectAcl",
    "GetObjectAttributes",
    "GetObjectLegalHold",
    "GetObjectLockConfiguration",
    "GetObjectRetention",
    "GetObjectTagging",
    "GetObjectTorrent",
    "GetPublicAccessBlock",
    "GetBucketAccelerateConfiguration",
    "GetBucketAcl",
    "GetBucketAnalyticsConfiguration",
    "GetBucketCors",
    "GetBucketEncryption",
    "GetBucketIntelligentTieringConfiguration",
    "GetBucketInventoryConfiguration",
    "GetBucketLifecycle",
    "GetBucketLifecycleConfiguration",
    "GetBucketLocation",
    "GetBucketLogging",
    "GetBucketMetricsConfiguration",
    "GetBucketNotification",
    "GetBucketNotificationConfiguration",
    "GetBucketOwnershipControls",
    "GetBucketPolicy",
    "GetBucketPolicyStatus",
    "GetBucketReplication",
    "GetBucketRequestPayment",
    "GetBucketTagging",
    "GetBucketVersioning",
    "GetBucketWebsite",
    "GetObject",
    "GetObjectAcl",
    "GetObjectAttributes",
    "GetObjectLegalHold",
    "GetObjectLockConfiguration",
    "GetObjectRetention",
    "GetObjectTagging",
    "GetObjectTorrent",
    "GetPublicAccessBlock",
    "GetBucketAccelerateConfiguration",
    "GetBucketAcl",
    "GetBucketAnalyticsConfiguration",
    "GetBucketCors",
    "GetBucketEncryption",
    "GetBucketIntelligentTieringConfiguration",
    "GetBucketInventoryConfiguration",
    "GetBucketLifecycle",
    "GetBucketLifecycleConfiguration",
    "GetBucketLocation",
    "GetBucketLogging",
    "GetBucketMetricsConfiguration",
    "GetBucketNotification",
    "GetBucketNotificationConfiguration",
    "GetBucketOwnershipControls",
    "GetBucketPolicy",
    "GetBucketPolicyStatus",
    "GetBucketReplication",
    "GetBucketRequestPayment",
    "GetBucketTagging",
    "GetBucketVersioning",
    "GetBucketWebsite",
    "GetObject",
    "GetObjectAcl",
    "GetObjectAttributes",
    "GetObjectLegalHold",
    "GetObjectLockConfiguration",
    "GetObjectRetention",
    "GetObjectTagging",
    "GetObjectTorrent",
    "GetPublicAccessBlock"
]);
// List of expected User Agents
let ExpectedUserAgents = dynamic([
    "config.amazonaws.com",
    "macie.amazonaws.com"
]);
// Threshold for mass downloads within the Normal Timeframe
let NormalThreshold = 100;
// Threshold for mass downloads within the Low & Slow Timeframe
let LowSlowThreshold = 250;
// Threshold for mass downloads from expected User Agents within the Normal Timeframe
let ExpectedAgentNormalThreshold = 2000;
// Threshold for mass downloads from expected User Agents within the Low & Slow Timeframe
let ExpectedAgentLowSlowThreshold = 5000;
// Timeframe used to detect mass downloads over the Standard Threshold limit
let StandardTimeframe = 1d;
// Low & Slow Timeframe used to detect mass downloads over a longer period of time
let NormalTimeframe = 1d;
let LowSlowTimeframe = 7d;
AWSCloudTrail
| where TimeGenerated > ago(LowSlowTimeframe) and EventSource in (StorageResources) and EventName in (Events)
| summarize RequestCount=count() by bin(TimeGenerated, 7d), EventName, SourceIpAddress, EventSource, RecipientAccountId, UserAgent
| where RequestCount > (LowSlowThreshold)
| extend AttackType = "Low & Slow"
| union (AWSCloudTrail
        | where TimeGenerated > ago(NormalTimeframe) and EventSource in (StorageResources) and EventName in (Events)
        | summarize RequestCount=count() by bin(TimeGenerated, 1d), EventName, SourceIpAddress, EventSource, RecipientAccountId, UserAgent
        | where RequestCount > (NormalThreshold)
        | extend AttackType = "Normal"
)
// Excludes mass downloads from User Agents that do not exceed both Expected User Agents thresholds
| where not (((AttackType == "Low & Slow") and not (RequestCount > (ExpectedAgentLowSlowThreshold)) and (UserAgent has_any (ExpectedUserAgents))) or ((AttackType == "Normal") and not (RequestCount > (ExpectedAgentNormalThreshold)) and (UserAgent has_any (ExpectedUserAgents))))
// Excludes Cloudtrail reading Cloudtrail Management Event logs
| where not (SourceIpAddress == "cloudtrail.amazonaws.com" and UserAgent == "cloudtrail.amazonaws.com" and EventSource == "s3.amazonaws.com")
| project TimeGenerated, EventName, SourceIpAddress, EventSource, RecipientAccountId, UserAgent, AttackType, RequestCount
